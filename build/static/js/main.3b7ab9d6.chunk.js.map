{"version":3,"sources":["key.js","App.js","index.js"],"names":["module","exports","chaves","appid","App","kelvinToCelsius","k","toFixed","requisicao","fetch","state","entrada","then","response","json","undefined","message","setState","cidade","temperatura","umidade","erro","name","main","temp","humidity","catch","error","Container","className","Row","Col","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","this","onChange","e","target","placeholder","Button","color","onClick","Card","CardTitle","CardBody","CardText","Component","render","document","getElementById"],"mappings":"8FAIAA,EAAOC,QAAU,CACfC,OAJa,CACbC,MAAO,sC,mRCqIMC,E,kDA7Gb,aAAe,IAAD,8BACZ,gBAUJC,gBAAkB,SAAAC,GAAC,OAAKA,EAAI,QAAQC,QAAQ,IAX5B,EAahBC,WAAa,WACXC,MAAM,qDAAD,OAED,EAAKC,MAAMC,QAFV,qBAGUT,SAAOC,QAErBS,MAAK,SAAAC,GAAQ,OACdA,EAASC,UACRF,MAAK,SAAAE,QACiBC,IAAjBD,EAAKE,QACP,EAAKC,SAAS,CACZC,OAAQ,GACRC,YAAa,GACbC,QAAS,GACTC,KAAMP,EAAKE,UAGb,EAAKC,SAAS,CACZC,OAAQJ,EAAKQ,KACbH,YAAa,EAAKd,gBAAgBS,EAAKS,KAAKC,MAC5CJ,QAASN,EAAKS,KAAKE,SACnBJ,KAAM,QAITK,OAAM,SAAAC,GACL,EAAKV,SAAS,CACZI,KAAMM,EAAMX,cAtChB,EAAKN,MAAQ,CACXC,QAAS,GACTO,OAAQ,GACRC,YAAa,GACbC,QAAS,GACTC,KAAM,IAPI,E,qDA6CJ,IAAD,OACP,OACE,kBAACO,EAAA,EAAD,CACEC,UAAU,kBACR,kBAACC,EAAA,EAAD,CAAKD,UAAU,0BACb,kBAACE,EAAA,EAAD,CAAKF,UAAU,kDACb,6BACA,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,gBAEF,kBAACC,EAAA,EAAD,CACEC,MAASC,KAAK5B,MAAMC,QACpB4B,SAAW,SAAAC,GAAC,OAAI,EAAKvB,SAAS,CAC5BN,QAAS6B,EAAEC,OAAOJ,SAGpBK,YAAY,4BAEd,kBAACT,EAAA,EAAD,CACEC,UAAU,UACR,kBAACS,EAAA,EAAD,CACEC,MAAM,YACNC,QAAUP,KAAK9B,YAFjB,YAON,+BAGJ,kBAACsB,EAAA,EAAD,CAAKD,UAAU,0BACb,kBAACE,EAAA,EAAD,CAAKF,UAAU,kDACW,KAAtBS,KAAK5B,MAAMQ,QACX,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,gBACYX,KAAK5B,MAAMQ,QAEvB,kBAAC+B,EAAA,EAAD,qBACiBX,KAAK5B,MAAMS,YAD5B,UAGA,kBAAC8B,EAAA,EAAD,gCAC4BX,KAAK5B,MAAMU,QADvC,QAMa,KAApBkB,KAAK5B,MAAMW,MACV,8BACE,kBAAC0B,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0BAA8BX,KAAK5B,MAAMW,e,GAnG3C6B,aClBlBC,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3b7ab9d6.chunk.js","sourcesContent":["\nconst chaves = {\n  appid: '2d072a744b41aaaa4b037c48b496bd24'\n}\nmodule.exports = {\n  chaves\n}\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport { render } from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { chaves } from \"./key\";\nimport {\n  Container,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Label,\n  Alert\n} from \"reactstrap\";\n// import './App.css';\n\nconst appid = 'chaves';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      entrada: '',\n      cidade: '',\n      temperatura: '',\n      umidade: '',\n      erro: ''\n    };\n  }\n\nkelvinToCelsius = k => (k - 273.15).toFixed(2);\n  \nrequisicao = () => {\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.entrada\n    },br&APPID=${chaves.appid}`\n  )\n  .then(response => \n  response.json())\n  .then(json => {\n    if (json.message !== undefined) {\n      this.setState({\n        cidade: '',\n        temperatura: '',\n        umidade: '',\n        erro: json.message\n      });\n    } else {\n      this.setState({\n        cidade: json.name,\n        temperatura: this.kelvinToCelsius(json.main.temp),\n        umidade: json.main.humidity,\n        erro: ''\n      });\n    }\n    })\n    .catch(error => {\n      this.setState({\n        erro: error.message\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Container\n        className='bg-danger mt-2'>\n          <Row className='justify-content-center'>\n            <Col className='col-xs-12 col-sm-10 col-md-8 col-lg-6 col-xl-5'>\n              <br />\n              <InputGroup>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>Cidade</InputGroupText>\n                </InputGroupAddon>\n                <Input \n                  value= { this.state.entrada }\n                  onChange={ e => this.setState({\n                    entrada: e.target.value\n                  })\n                  }\n                  placeholder='digite o nome da cidade'\n                />\n                <InputGroupAddon\n                  addonType='append'>\n                    <Button\n                      color='secondary'\n                      onClick={ this.requisicao }>\n                        Buscar\n                      </Button>\n                  </InputGroupAddon>\n              </InputGroup>\n              <br />\n            </Col>\n          </Row>\n          <Row className='justify-content-center'>\n            <Col className='col-xs-12 col-sm-10 col-md-8 col-lg-6 col-xl-5'>\n              { this.state.cidade !== \"\" && (\n                <Card>\n                  <CardTitle>Resultado da busca</CardTitle>\n                  <CardBody>\n                      <CardText>\n                        Cidade: { this.state.cidade }\n                      </CardText>\n                      <CardText>\n                        Temperatura: { this.state.temperatura} ÂºC\n                      </CardText>\n                      <CardText>\n                        Umidade relativa do ar: { this.state.umidade } %\n                      </CardText>\n                  </CardBody>\n                </Card>\n              )}\n              {this.state.erro !== \"\" && (\n                <card>\n                  <CardTitle>Resultado da Busca</CardTitle>\n                  <CardBody>\n                    <CardText>Mensagem de erro: { this.state.erro }</CardText>\n                  </CardBody>\n                </card>\n              )}\n            </Col>\n          </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { render } from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById(\"root\"));\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n"],"sourceRoot":""}